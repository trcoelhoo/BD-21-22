Grupo : p2g7
Alunos:	Tiago Coelho 98385
	Frederico Vieira 98518

-----------------------------------------------------------
5.1
    a)Obtenha uma lista contendo os projetos e funcionários (ssn e nome completo) que lá trabalham;
	R: π Fname,Lname,Ssn,Pno,Pname (employee ⨝ (Essn = Ssn) works_on ⨝ (Pno = Pnumber) project)

    b)  Obtenha o nome de todos os funcionários supervisionados por ‘Carlos D Gomes’;
	R:employee ⨝ (Super_ssn=supervisor_ssn.Ssn) ρ supervisor_ssn (π Ssn (σ Fname='Carlos' ∧ Minit='D' ∧ Lname='Gomes' (employee)))

    c) Para cada projeto, listar o seu nome e o número de horas (por semana) gastos nesse projeto por todos os funcionários;
	R:γ Pno; sum(Hours) -> total (project ⨝ (Pnumber=Pno) works_on)

    d) Obter o nome de todos os funcionários do departamento 3 que trabalham mais de 20 horas por semana no projeto ‘Aveiro Digital’;
 	R:π Fname,Hours (σ Dno=3 (employee ⨝ (Ssn=Essn) (σ Pno=1 ∧ Hours>20 (project ⨝ (Pnumber=Pno) works_on))))

    e) Nome dos funcionários que não trabalham para projetos;
	R: π Fname, Minit, Lname (σ Essn=null (employee ⟕ (Ssn=Essn) works_on))

    f) Para cada departamento, listar o seu nome e o salário médio dos seus funcionários do sexo feminino;
	R: γ department.Dname; avg(employee.Salary) -> salarioMedF (σ employee.Sex = 'F' (department ⨝ (Dnumber = Dno) employee))

    g) Obter uma lista de todos os funcionários com mais do que dois dependentes;
	R: σ dependentes ≥ 3 (γ Fname,Minit, Lname; count(Essn) -> dependentes (employee ⨝ (Ssn=Essn) dependent))

    h) Obtenha uma lista de todos os funcionários gestores de departamento que não têm dependentes;
	R: π Fname,Minit,Lname,Ssn,Dno (σ Essn=null (dependent ⟖(Essn=Ssn) (employee ⨝ (Mgr_ssn=Ssn) department)))

    i)Obter os nomes e endereços de todos os funcionários que trabalham em, pelo menos, um projeto localizado em Aveiro mas o seu departamento não tem nenhuma localização em Aveiro
 	R: π Fname, Minit, Lname, Address (employee ⨝ (π Plocation (σ (Plocation='Aveiro') project ⨝ works_on)) ⨝ σ Dlocation≠'Aveiro' (dept_location ⨝(Dnumber=Dno) employee))


5.2a)Lista dos fornecedores que nunca tiveram encomendas;
	R: π nome σ fornecedor=null (fornecedor ⟕ (nif = fornecedor) encomenda)

   b) Número médio de unidades encomendadas para cada produto;
	R:γ nome; avg(item.unidades) -> Unidades (produto ⨝ (codigo = codProd) item)

   c) Número médio de produtos por encomenda; (nota: não interessa o número de
unidades);
	R:γ avg(Produtos)-> Media (γ numEnc; count(unidades)-> Produtos (item))

   d)Lista de produtos (e quantidades) fornecidas por cada fornecedor;
	R: π fornecedor.nome,produto.nome, item.unidades (produto ⨝ codigo = item.codProd (fornecedor ⨝ (nif = encomenda.fornecedor) (encomenda ⨝ (numero = numEnc ) item)))


5.3a) Lista de pacientes que nunca tiveram uma prescrição;
	R:σ prescricao.numPresc=Null (paciente ⟕ prescricao)

   b) Número de prescrições por especialidade médica;
	R: γ medico.especialidade; count(prescricao.numMedico)->Prescricao (σ prescricao.farmacia ≠ null (prescricao⨝ (numMedico=numSNS) medico))
   
   c) Número de prescrições processadas por farmácia;
	R: γ farmacia.nome; count(prescricao.farmacia)->Prescricao (σ prescricao.farmacia ≠ null (prescricao⨝ (farmacia=nome) farmacia))
   
   d) Para a farmacêutica com registo número 906, lista dos seus fármacos nunca prescritos;
	R: σ numPresc = null (σ numRegFarm = 906 (farmaco) ⟗ (nome = nomeFarmaco) presc_farmaco)
   
   e) Para cada farmácia, o número de fármacos de cada farmacêutica vendidos;
	R:  farmaceutica⨝(numRegFarm=numReg) (γ farmacia.nome, presc_farmaco.numRegFarm; count(presc_farmaco.nomeFarmaco)->FarmVendidos (presc_farmaco⨝(presc_farmaco.numPresc=prescricao.numPresc) ((farmacia⨝(nome=farmacia) prescricao))))

   f) Pacientes que tiveram prescrições de médicos diferentes.
	R: σ Medicos>1 (γ paciente.nome; count(prescricao.numMedico)->Medicos (paciente⨝prescricao))
